name: Android build and deploy
 
on:
  workflow_dispatch:
jobs:
  linter:
    name: Linter
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps: 
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: beta
          cache: true
      - run: flutter pub get
      - run: flutter analyze --no-fatal-infos --no-fatal-warnings 
  formater:
    name: Formating
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps: 
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: beta
          cache: true
      - run: flutter pub get
      - run: dart format --set-exit-if-changed .
  build:
    needs: [linter, formater]
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
 
      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: beta
          cache: true
      - name: Set up JDK 11
        uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2
        with:
          java-version: 11
          distribution: temurin
                      
      - run: flutter pub get
      - run: flutter build apk 
      - run: flutter build apk --split-per-abi 

      - uses: actions/upload-artifact@v3
        with:
          name: all
          path: build/app/outputs/flutter-apk
      - uses: actions/upload-artifact@v3
        with:
          name: universal
          path: build/app/outputs/flutter-apk/app-normal-release.apk
      - uses: actions/upload-artifact@v3
        with:
          name: arm-v8a
          path: build/app/outputs/flutter-apk/app-arm64-v8a-normal-release.apk
      - uses: actions/upload-artifact@v3
        with:
          name: arm-v7a
          path: build/app/outputs/flutter-apk/app-armeabi-v7a-normal-release.apk
      - uses: actions/upload-artifact@v3
        with:
          name: x86-64
          path: build/app/outputs/flutter-apk/app-x86_64-normal-release.apk
          
  # deploy:
  #     needs: build
  #     runs-on: ubuntu-latest
  #     steps:
  #       - name: Download artifact
  #         uses: actions/download-artifact@v2
  #         with:
  #           name: arm-v8a
  #       - name: Upload artifact to Firebase App Distribution
  #         uses: wzieba/Firebase-Distribution-Github-Action@v1
  #         with:
  #           appId: ${{ secrets.FIRE_APP_ID }}
  #           serviceCredentialsFileContent: ${{ secrets.FIRE_CREDENTIAL_FILE }}
  #           groups: android_testers
  #           file: app-arm64-v8a-normal-release.apk
